package com.nt.entity;

import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import com.fasterxml.jackson.annotation.JsonIgnore;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.OneToMany;
import jakarta.persistence.OneToOne;
import jakarta.persistence.Table;
import lombok.Data;

@Entity
@Data
@Table(name = "orders")
public class Order {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String orderTrackingId;
    private Integer totalQuantity;
    private Integer totalPrice;
    private String status;
    private LocalDate deliveryDate;
    
    @CreationTimestamp
    private LocalDate creationTime;
    
    @UpdateTimestamp
    private LocalDate lastUpdated;
    
    @OneToOne(cascade = CascadeType.ALL)
    private Address address; // Correct: Using CascadeType.ALL for Address

//    @OneToMany(mappedBy = "order", cascade = CascadeType.ALL)
//    @JsonIgnore // Prevent circular reference during serialization
//    private Set<OrderItems> orderItems = new HashSet<>();

    @ManyToOne
    @JoinColumn(name = "customerId", nullable = false)
    @JsonIgnore // Prevent circular reference during serialization
    private Customer customer;
}
